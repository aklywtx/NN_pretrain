Epochs:   0%|                                                                                                                                                                          | 0/100 [00:00<?, ?it/s]/Users/aklywtx/opt/anaconda3/lib/python3.11/site-packages/torch/nn/modules/loss.py:128: UserWarning: Using a target size (torch.Size([64])) that is different to the input size (torch.Size([64, 2])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.l1_loss(input, target, reduction=self.reduction)                                                                                                                             | 0/79 [00:00<?, ?it/s]
Epochs:   0%|                                                                                                                                                                          | 0/100 [00:00<?, ?it/s]
Traceback (most recent call last):                                                                                                                                                                             
  File "/Users/aklywtx/Desktop/VLM_Bias_research/NN_pretrain/models/mlp_train.py", line 85, in <module>
    main()
  File "/Users/aklywtx/Desktop/VLM_Bias_research/NN_pretrain/models/mlp_train.py", line 79, in main
    trainer.train(train_loader, val_loader, num_epochs)
  File "/Users/aklywtx/Desktop/VLM_Bias_research/NN_pretrain/models/utils.py", line 159, in train
    loss = self.criterion(outputs, labels)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/aklywtx/opt/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/aklywtx/opt/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/aklywtx/opt/anaconda3/lib/python3.11/site-packages/torch/nn/modules/loss.py", line 128, in forward
    return F.l1_loss(input, target, reduction=self.reduction)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/aklywtx/opt/anaconda3/lib/python3.11/site-packages/torch/nn/functional.py", line 3753, in l1_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/aklywtx/opt/anaconda3/lib/python3.11/site-packages/torch/functional.py", line 76, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: The size of tensor a (2) must match the size of tensor b (64) at non-singleton dimension 1
